// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package taloscluster

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allowed machine types
type MachineTypes string

const (
	MachineTypesControlplane = MachineTypes("controlplane")
	MachineTypesWorker       = MachineTypes("worker")
	MachineTypesInit         = MachineTypes("init")
)

func (MachineTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineTypes)(nil)).Elem()
}

func (e MachineTypes) ToMachineTypesOutput() MachineTypesOutput {
	return pulumi.ToOutput(e).(MachineTypesOutput)
}

func (e MachineTypes) ToMachineTypesOutputWithContext(ctx context.Context) MachineTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MachineTypesOutput)
}

func (e MachineTypes) ToMachineTypesPtrOutput() MachineTypesPtrOutput {
	return e.ToMachineTypesPtrOutputWithContext(context.Background())
}

func (e MachineTypes) ToMachineTypesPtrOutputWithContext(ctx context.Context) MachineTypesPtrOutput {
	return MachineTypes(e).ToMachineTypesOutputWithContext(ctx).ToMachineTypesPtrOutputWithContext(ctx)
}

func (e MachineTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MachineTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MachineTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MachineTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MachineTypesOutput struct{ *pulumi.OutputState }

func (MachineTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineTypes)(nil)).Elem()
}

func (o MachineTypesOutput) ToMachineTypesOutput() MachineTypesOutput {
	return o
}

func (o MachineTypesOutput) ToMachineTypesOutputWithContext(ctx context.Context) MachineTypesOutput {
	return o
}

func (o MachineTypesOutput) ToMachineTypesPtrOutput() MachineTypesPtrOutput {
	return o.ToMachineTypesPtrOutputWithContext(context.Background())
}

func (o MachineTypesOutput) ToMachineTypesPtrOutputWithContext(ctx context.Context) MachineTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineTypes) *MachineTypes {
		return &v
	}).(MachineTypesPtrOutput)
}

func (o MachineTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MachineTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MachineTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MachineTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MachineTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MachineTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MachineTypesPtrOutput struct{ *pulumi.OutputState }

func (MachineTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineTypes)(nil)).Elem()
}

func (o MachineTypesPtrOutput) ToMachineTypesPtrOutput() MachineTypesPtrOutput {
	return o
}

func (o MachineTypesPtrOutput) ToMachineTypesPtrOutputWithContext(ctx context.Context) MachineTypesPtrOutput {
	return o
}

func (o MachineTypesPtrOutput) Elem() MachineTypesOutput {
	return o.ApplyT(func(v *MachineTypes) MachineTypes {
		if v != nil {
			return *v
		}
		var ret MachineTypes
		return ret
	}).(MachineTypesOutput)
}

func (o MachineTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MachineTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MachineTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MachineTypesInput is an input type that accepts values of the MachineTypes enum
// A concrete instance of `MachineTypesInput` can be one of the following:
//
//	MachineTypesControlplane
//	MachineTypesWorker
//	MachineTypesInit
type MachineTypesInput interface {
	pulumi.Input

	ToMachineTypesOutput() MachineTypesOutput
	ToMachineTypesOutputWithContext(context.Context) MachineTypesOutput
}

var machineTypesPtrType = reflect.TypeOf((**MachineTypes)(nil)).Elem()

type MachineTypesPtrInput interface {
	pulumi.Input

	ToMachineTypesPtrOutput() MachineTypesPtrOutput
	ToMachineTypesPtrOutputWithContext(context.Context) MachineTypesPtrOutput
}

type machineTypesPtr string

func MachineTypesPtr(v string) MachineTypesPtrInput {
	return (*machineTypesPtr)(&v)
}

func (*machineTypesPtr) ElementType() reflect.Type {
	return machineTypesPtrType
}

func (in *machineTypesPtr) ToMachineTypesPtrOutput() MachineTypesPtrOutput {
	return pulumi.ToOutput(in).(MachineTypesPtrOutput)
}

func (in *machineTypesPtr) ToMachineTypesPtrOutputWithContext(ctx context.Context) MachineTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MachineTypesPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MachineTypesInput)(nil)).Elem(), MachineTypes("controlplane"))
	pulumi.RegisterInputType(reflect.TypeOf((*MachineTypesPtrInput)(nil)).Elem(), MachineTypes("controlplane"))
	pulumi.RegisterOutputType(MachineTypesOutput{})
	pulumi.RegisterOutputType(MachineTypesPtrOutput{})
}
