# coding=utf-8
# *** WARNING: this file was generated by Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['ClusterArgs', 'Cluster']

@pulumi.input_type
class ClusterArgs:
    def __init__(__self__, *,
                 cluster_endpoint: pulumi.Input[str],
                 cluster_machines: pulumi.Input[Sequence[pulumi.Input['ClusterMachinesArgs']]],
                 cluster_name: str,
                 talos_version_contract: Optional[pulumi.Input[str]] = None,
                 kubernetes_version: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Cluster resource.
        :param pulumi.Input[str] cluster_endpoint: Cluster endpoint, the Kubernetes API endpoint accessible by all nodes
        :param pulumi.Input[Sequence[pulumi.Input['ClusterMachinesArgs']]] cluster_machines: Configuration settings for machines
        :param str cluster_name: Name of the cluster
        :param pulumi.Input[str] talos_version_contract: Version of Talos features used for configuration generation. 
               Do not confuse this with the talosImage property. 
               Used in NewSecrets() and GetConfigurationOutput() resources. 
               This property is immutable to prevent version conflicts across provider updates. 
               See issue: https://github.com/siderolabs/terraform-provider-talos/issues/168 
               The default value is based on gendata.VersionTag, current: v1.8.2.
        :param pulumi.Input[str] kubernetes_version: Kubernetes version to install. 
               Default is v1.31.0.
        """
        pulumi.set(__self__, "cluster_endpoint", cluster_endpoint)
        pulumi.set(__self__, "cluster_machines", cluster_machines)
        pulumi.set(__self__, "cluster_name", cluster_name)
        if talos_version_contract is None:
            talos_version_contract = 'v1.8.2'
        pulumi.set(__self__, "talos_version_contract", talos_version_contract)
        if kubernetes_version is None:
            kubernetes_version = 'v1.31.0'
        if kubernetes_version is not None:
            pulumi.set(__self__, "kubernetes_version", kubernetes_version)

    @property
    @pulumi.getter(name="clusterEndpoint")
    def cluster_endpoint(self) -> pulumi.Input[str]:
        """
        Cluster endpoint, the Kubernetes API endpoint accessible by all nodes
        """
        return pulumi.get(self, "cluster_endpoint")

    @cluster_endpoint.setter
    def cluster_endpoint(self, value: pulumi.Input[str]):
        pulumi.set(self, "cluster_endpoint", value)

    @property
    @pulumi.getter(name="clusterMachines")
    def cluster_machines(self) -> pulumi.Input[Sequence[pulumi.Input['ClusterMachinesArgs']]]:
        """
        Configuration settings for machines
        """
        return pulumi.get(self, "cluster_machines")

    @cluster_machines.setter
    def cluster_machines(self, value: pulumi.Input[Sequence[pulumi.Input['ClusterMachinesArgs']]]):
        pulumi.set(self, "cluster_machines", value)

    @property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> str:
        """
        Name of the cluster
        """
        return pulumi.get(self, "cluster_name")

    @cluster_name.setter
    def cluster_name(self, value: str):
        pulumi.set(self, "cluster_name", value)

    @property
    @pulumi.getter(name="talosVersionContract")
    def talos_version_contract(self) -> pulumi.Input[str]:
        """
        Version of Talos features used for configuration generation. 
        Do not confuse this with the talosImage property. 
        Used in NewSecrets() and GetConfigurationOutput() resources. 
        This property is immutable to prevent version conflicts across provider updates. 
        See issue: https://github.com/siderolabs/terraform-provider-talos/issues/168 
        The default value is based on gendata.VersionTag, current: v1.8.2.
        """
        return pulumi.get(self, "talos_version_contract")

    @talos_version_contract.setter
    def talos_version_contract(self, value: pulumi.Input[str]):
        pulumi.set(self, "talos_version_contract", value)

    @property
    @pulumi.getter(name="kubernetesVersion")
    def kubernetes_version(self) -> Optional[pulumi.Input[str]]:
        """
        Kubernetes version to install. 
        Default is v1.31.0.
        """
        return pulumi.get(self, "kubernetes_version")

    @kubernetes_version.setter
    def kubernetes_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "kubernetes_version", value)


class Cluster(pulumi.ComponentResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cluster_endpoint: Optional[pulumi.Input[str]] = None,
                 cluster_machines: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ClusterMachinesArgs', 'ClusterMachinesArgsDict']]]]] = None,
                 cluster_name: Optional[str] = None,
                 kubernetes_version: Optional[pulumi.Input[str]] = None,
                 talos_version_contract: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Initialize a new Talos cluster:
        - Creates secrets
        - Generates machine configurations for all nodes

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cluster_endpoint: Cluster endpoint, the Kubernetes API endpoint accessible by all nodes
        :param pulumi.Input[Sequence[pulumi.Input[Union['ClusterMachinesArgs', 'ClusterMachinesArgsDict']]]] cluster_machines: Configuration settings for machines
        :param str cluster_name: Name of the cluster
        :param pulumi.Input[str] kubernetes_version: Kubernetes version to install. 
               Default is v1.31.0.
        :param pulumi.Input[str] talos_version_contract: Version of Talos features used for configuration generation. 
               Do not confuse this with the talosImage property. 
               Used in NewSecrets() and GetConfigurationOutput() resources. 
               This property is immutable to prevent version conflicts across provider updates. 
               See issue: https://github.com/siderolabs/terraform-provider-talos/issues/168 
               The default value is based on gendata.VersionTag, current: v1.8.2.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ClusterArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Initialize a new Talos cluster:
        - Creates secrets
        - Generates machine configurations for all nodes

        :param str resource_name: The name of the resource.
        :param ClusterArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ClusterArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cluster_endpoint: Optional[pulumi.Input[str]] = None,
                 cluster_machines: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ClusterMachinesArgs', 'ClusterMachinesArgsDict']]]]] = None,
                 cluster_name: Optional[str] = None,
                 kubernetes_version: Optional[pulumi.Input[str]] = None,
                 talos_version_contract: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is not None:
            raise ValueError('ComponentResource classes do not support opts.id')
        else:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ClusterArgs.__new__(ClusterArgs)

            if cluster_endpoint is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_endpoint'")
            __props__.__dict__["cluster_endpoint"] = cluster_endpoint
            if cluster_machines is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_machines'")
            __props__.__dict__["cluster_machines"] = cluster_machines
            if cluster_name is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_name'")
            __props__.__dict__["cluster_name"] = cluster_name
            if kubernetes_version is None:
                kubernetes_version = 'v1.31.0'
            __props__.__dict__["kubernetes_version"] = kubernetes_version
            if talos_version_contract is None:
                talos_version_contract = 'v1.8.2'
            if talos_version_contract is None and not opts.urn:
                raise TypeError("Missing required property 'talos_version_contract'")
            __props__.__dict__["talos_version_contract"] = talos_version_contract
            __props__.__dict__["client_configuration"] = None
            __props__.__dict__["generated_configurations"] = None
            __props__.__dict__["machines"] = None
        super(Cluster, __self__).__init__(
            'talos-cluster:index:Cluster',
            resource_name,
            __props__,
            opts,
            remote=True)

    @property
    @pulumi.getter(name="clientConfiguration")
    def client_configuration(self) -> pulumi.Output[Optional['outputs.ClientConfiguration']]:
        """
        Client configuration for bootstrapping and applying resources.
        """
        return pulumi.get(self, "client_configuration")

    @property
    @pulumi.getter(name="generatedConfigurations")
    def generated_configurations(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        TO DO
        """
        return pulumi.get(self, "generated_configurations")

    @property
    @pulumi.getter
    def machines(self) -> pulumi.Output[Optional['outputs.ApplyMachines']]:
        """
        TO DO
        """
        return pulumi.get(self, "machines")

