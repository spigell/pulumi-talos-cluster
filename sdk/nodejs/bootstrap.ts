// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Initialize a new talos cluster: creates etcd cluster
 */
export class Bootstrap extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'talos-cluster:index:Bootstrap';

    /**
     * Returns true if the given object is an instance of Bootstrap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bootstrap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bootstrap.__pulumiType;
    }


    /**
     * Create a Bootstrap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BootstrapArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["clientConfiguration"] = args ? args.clientConfiguration : undefined;
            resourceInputs["node"] = args ? args.node : undefined;
        } else {
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bootstrap.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Bootstrap resource.
 */
export interface BootstrapArgs {
    /**
     * The client configuration. Can be used for bootstraping and apply
     */
    clientConfiguration?: pulumi.Input<inputs.ClientConfigurationArgs>;
    /**
     * Node for bootstrap
     */
    node?: pulumi.Input<string>;
}
