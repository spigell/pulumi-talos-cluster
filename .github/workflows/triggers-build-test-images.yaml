name: Build hcloud Image with Packer and Talos

on:
  push:
    paths:
      - .github/workflows/triggers-build-test-images.yaml
      - tests/packer/hcloud-schematic.json
      - tests/packer/hcloud-talos.pkr.hcl
  workflow_dispatch:

env:
  TALOS_VERSION: 'v1.10.0'

jobs:
  build-hcloud-image:
    name: Build hcloud image with talos for tests
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Add HashiCorp APT repository and install Packer
      run: |
        # Add the GPG key
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        # Add the repository
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(grep -oP '(?<=UBUNTU_CODENAME=).*' /etc/os-release || lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        # Update and install dependencies
        sudo apt-get update && sudo apt-get install -y curl jq packer
    # Step 3: Read schematic from YAML file and create schematic via Talos Image Factory API
    - name: Create Talos schematic
      id: create_schematic
      run: |
        # Send POST request to Talos Image Factory
        response=$(curl -s -X POST \
          -H "Content-Type: application/json" \
          -d "@tests/packer/hcloud-schematic.json" \
          https://factory.talos.dev/schematics)

        # Extract schematic ID
        schematic_id=$(echo $response | jq -r '.id')

        # Save schematic ID for future steps
        echo "schematic_id=$schematic_id" >> $GITHUB_ENV

    # Step 4: Use schematic ID with Packer
    - name: Build Hetzner Cloud image with Packer
      run: |
        # Initialize and build with Packer
        cd tests/packer
        packer init .
        packer build -var "talos_version=${{ env.TALOS_VERSION }}" -var "talos_schematic_id=${{ env.schematic_id }}" hcloud-talos.pkr.hcl
      env:
        HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
