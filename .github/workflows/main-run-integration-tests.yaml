name: Run integration tests

on:
  push:
    branches:
      - main
      - preview
  workflow_dispatch:
    inputs:
      test:
        type: choice
        options:
          - TestHcloudClusterGo
          - TestHcloudClusterJS
          - all
        description: "The test to run. Defaults to `all`"
        required: true
        default: 'all'

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Simple test suites (GO)
            runtime: go
            test: TestHcloudClusterGo
            command: make integration_tests_go TEST=TestHcloudClusterGo
          - name: Simple test suites (JS)
            runtime: nodejs
            test: TestHcloudClusterJS
            command: make integration_tests_go TEST=TestHcloudClusterJS
    name: ${{ matrix.name }}
    # if: startsWith(matrix.test, inputs.test) || inputs.test == 'all' || github.ref == 'main'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        if: contains(fromJson('["all", matrix.test]'), inputs.test) || github.ref == ${{ github.event.repository.default_branch }}
        with:
          fetch-tags: true
      - name: Prepare pulumi environment
        uses: ./.github/actions/prepare-pulumi-env
        if: contains(fromJson('["all", matrix.test]'), inputs.test) || github.ref == ${{ github.event.repository.default_branch }}
        with:
          runtime: ${{ matrix.runtime }}
          with-tests: 'true'
          with-provider: 'false'
      - name: Install talosctl
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        if: contains(fromJson('["all", matrix.test]'), inputs.test) || github.ref == ${{ github.event.repository.default_branch }}
        with:
          repo: siderolabs/talos
          asset-name: talosctl
          rename-to: talosctl
          platform: linux
          arch: amd64
          chmod: 0755
          extension-matching: disable
#      - name: Run the test
#        if: contains(fromJson('["all", matrix.test]'), inputs.test) || github.ref == ${{ github.event.repository.default_branch }}
#        env:
#          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
#        run: ${{ matrix.command }}
